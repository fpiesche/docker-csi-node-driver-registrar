name: Build Docker images

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this repo.
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  # Run on PRs except for documentation.
  pull_request:
    paths-ignore:
      - '**/*.md'
  
env:
  PLATFORMS: linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64
  IMAGE_NAME: csi-node-driver-registrar
  PUSH_IMAGE: ${{ github.ref == 'refs/heads/main' }}
  BUILD_RELEASE: true

jobs:

  build-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get latest tagged release
        run: |
          cd node-driver-registrar
          git fetch --tags
          LATEST_TAG_REV=$(git rev-list --tags --max-count 1)
          REGISTRAR_RELEASE=$(git describe --tags ${LATEST_TAG_REV})
          echo "REGISTRAR_REVISION=${LATEST_TAG_REV}" >> $GITHUB_ENV
          echo "REGISTRAR_RELEASE=${REGISTRAR_RELEASE}" >> $GITHUB_ENV
          git checkout ${REGISTRAR_RELEASE}

      - name: Check whether latest release needs building
        if: ${{ env.PUSH_IMAGE == 'true' }}
        run: |
          # Check whether we can skip building the current tag
          if [[ $(curl https://registry.hub.docker.com/v2/repositories/florianpiesche/csi-node-driver-registrar/tags -o /dev/null -s -w "%{http_code}") != "404" ]]; then
            SERVER_TAGS=$(curl -s https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}/tags | jq -r ".[].name")
            for tag in ${SERVER_TAGS[@]}; do
              if [[ "$tag" == "${REGISTRAR_VERSION}" ]]; then
                echo "Release ${tag} has already been built."
                echo "BUILD_RELEASE=false" >> $GITHUB_ENV
                break
              fi
            done
          fi

      - name: Docker Setup QEMU
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-qemu-action@v2

      - name: Docker Setup Buildx
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push ${{ env.IMAGE_NAME }} Docker image
        if: ${{ env.BUILD_RELEASE == 'true' }}
        uses: docker/build-push-action@v3
        with:
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME || 'nobody' }}/${{ env.IMAGE_NAME }}:${{ env.REGISTRAR_RELEASE }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.REGISTRAR_RELEASE }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ env.PUSH_IMAGE }}
